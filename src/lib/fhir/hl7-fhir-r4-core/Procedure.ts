// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Age } from './Age.js';
import { Annotation } from './Annotation.js';
import { BackboneElement } from './BackboneElement.js';
import { CodeableConcept } from './CodeableConcept.js';
import { DomainResource } from './DomainResource.js';
import { Identifier } from './Identifier.js';
import { Period } from './Period.js';
import { Range } from './Range.js';
import { Reference } from './Reference.js';
import { Element } from './Element.js';


export interface ProcedureFocalDevice extends BackboneElement {
    action?: CodeableConcept;
    manipulated?: Reference<'Device'>;
}

export interface ProcedurePerformer extends BackboneElement {
    actor?: Reference<'Device' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    function?: CodeableConcept;
    onBehalfOf?: Reference<'Organization'>;
}

export interface Procedure extends DomainResource {
    asserter?: Reference<'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    basedOn?: Reference<'CarePlan' | 'ServiceRequest'>[];
    bodySite?: CodeableConcept[];
    category?: CodeableConcept;
    code?: CodeableConcept;
    complication?: CodeableConcept[];
    complicationDetail?: Reference<'Condition'>[];
    encounter?: Reference<'Encounter'>;
    focalDevice?: ProcedureFocalDevice[];
    followUp?: CodeableConcept[];
    identifier?: Identifier[];
    instantiatesCanonical?: string[];
    _instantiatesCanonical?: Element;
    instantiatesUri?: string[];
    _instantiatesUri?: Element;
    location?: Reference<'Location'>;
    note?: Annotation[];
    outcome?: CodeableConcept;
    partOf?: Reference<'MedicationAdministration' | 'Observation' | 'Procedure'>[];
    performedAge?: Age;
    performedDateTime?: string;
    _performedDateTime?: Element;
    performedPeriod?: Period;
    performedRange?: Range;
    performedString?: string;
    _performedString?: Element;
    performer?: ProcedurePerformer[];
    reasonCode?: CodeableConcept[];
    reasonReference?: Reference<'Condition' | 'DiagnosticReport' | 'DocumentReference' | 'Observation' | 'Procedure'>[];
    recorder?: Reference<'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    report?: Reference<'Composition' | 'DiagnosticReport' | 'DocumentReference'>[];
    status?: 'preparation' | 'in-progress' | 'not-done' | 'on-hold' | 'stopped' | 'completed' | 'entered-in-error' | 'unknown';
    _status?: Element;
    statusReason?: CodeableConcept;
    subject?: Reference<'Group' | 'Patient'>;
    usedCode?: CodeableConcept[];
    usedReference?: Reference<'Device' | 'Medication' | 'Substance'>[];
}

