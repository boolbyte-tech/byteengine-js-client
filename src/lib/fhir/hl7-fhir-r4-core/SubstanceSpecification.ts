// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Attachment } from './Attachment.js';
import { BackboneElement } from './BackboneElement.js';
import { CodeableConcept } from './CodeableConcept.js';
import { DomainResource } from './DomainResource.js';
import { Identifier } from './Identifier.js';
import { Quantity } from './Quantity.js';
import { Range } from './Range.js';
import { Ratio } from './Ratio.js';
import { Reference } from './Reference.js';
import { Element } from './Element.js';

export interface SubstanceSpecificationProperty extends BackboneElement {
    amountQuantity?: Quantity;
    amountString?: string;
    category?: CodeableConcept;
    code?: CodeableConcept;
    definingSubstanceCodeableConcept?: CodeableConcept;
    definingSubstanceReference?: Reference<'Substance' | 'SubstanceSpecification'>;
    parameters?: string;
}

export interface SubstanceSpecificationNameOfficial extends BackboneElement {
    authority?: CodeableConcept;
    date?: string;
    status?: CodeableConcept;
}

export interface SubstanceSpecificationName extends BackboneElement {
    domain?: CodeableConcept[];
    jurisdiction?: CodeableConcept[];
    language?: CodeableConcept[];
    name?: string;
    official?: SubstanceSpecificationNameOfficial[];
    preferred?: boolean;
    source?: Reference<'DocumentReference'>[];
    status?: CodeableConcept;
    synonym?: SubstanceSpecificationName[];
    translation?: SubstanceSpecificationName[];
    type?: CodeableConcept;
}

export interface SubstanceSpecificationRelationship extends BackboneElement {
    amountQuantity?: Quantity;
    amountRange?: Range;
    amountRatio?: Ratio;
    amountRatioLowLimit?: Ratio;
    amountString?: string;
    amountType?: CodeableConcept;
    isDefining?: boolean;
    relationship?: CodeableConcept;
    source?: Reference<'DocumentReference'>[];
    substanceCodeableConcept?: CodeableConcept;
    substanceReference?: Reference<'SubstanceSpecification'>;
}

export interface SubstanceSpecificationMoiety extends BackboneElement {
    amountQuantity?: Quantity;
    amountString?: string;
    identifier?: Identifier;
    molecularFormula?: string;
    name?: string;
    opticalActivity?: CodeableConcept;
    role?: CodeableConcept;
    stereochemistry?: CodeableConcept;
}

export interface SubstanceSpecificationStructureIsotopeMolecularWeight extends BackboneElement {
    amount?: Quantity;
    method?: CodeableConcept;
    type?: CodeableConcept;
}

export interface SubstanceSpecificationStructureIsotope extends BackboneElement {
    halfLife?: Quantity;
    identifier?: Identifier;
    molecularWeight?: SubstanceSpecificationStructureIsotopeMolecularWeight;
    name?: CodeableConcept;
    substitution?: CodeableConcept;
}

export interface SubstanceSpecificationStructureRepresentation extends BackboneElement {
    attachment?: Attachment;
    representation?: string;
    type?: CodeableConcept;
}

export interface SubstanceSpecificationStructure extends BackboneElement {
    isotope?: SubstanceSpecificationStructureIsotope[];
    molecularFormula?: string;
    molecularFormulaByMoiety?: string;
    molecularWeight?: SubstanceSpecificationStructureIsotopeMolecularWeight;
    opticalActivity?: CodeableConcept;
    representation?: SubstanceSpecificationStructureRepresentation[];
    source?: Reference<'DocumentReference'>[];
    stereochemistry?: CodeableConcept;
}

export interface SubstanceSpecificationCode extends BackboneElement {
    code?: CodeableConcept;
    comment?: string;
    source?: Reference<'DocumentReference'>[];
    status?: CodeableConcept;
    statusDate?: string;
}

export interface SubstanceSpecification extends DomainResource {
    code?: SubstanceSpecificationCode[];
    comment?: string;
    _comment?: Element;
    description?: string;
    _description?: Element;
    domain?: CodeableConcept;
    identifier?: Identifier;
    moiety?: SubstanceSpecificationMoiety[];
    molecularWeight?: SubstanceSpecificationStructureIsotopeMolecularWeight[];
    name?: SubstanceSpecificationName[];
    nucleicAcid?: Reference<'SubstanceNucleicAcid'>;
    polymer?: Reference<'SubstancePolymer'>;
    property?: SubstanceSpecificationProperty[];
    protein?: Reference<'SubstanceProtein'>;
    referenceInformation?: Reference<'SubstanceReferenceInformation'>;
    relationship?: SubstanceSpecificationRelationship[];
    source?: Reference<'DocumentReference'>[];
    sourceMaterial?: Reference<'SubstanceSourceMaterial'>;
    status?: CodeableConcept;
    structure?: SubstanceSpecificationStructure;
    type?: CodeableConcept;
}

